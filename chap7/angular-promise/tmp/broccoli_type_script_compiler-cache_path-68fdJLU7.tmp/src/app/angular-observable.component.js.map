{"version":3,"file":"angular-observable.component.js","sourceRoot":"","sources":["angular-observable.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAC1C,gCAA+B,4BAA4B,CAAC,CAAA;AAC5D,sBAAmC,gBAAgB,CAAC,CAAA;AASpD;IAME,uCAAoB,OAAsB;QAN5C,iBAuBC;QAjBqB,YAAO,GAAP,OAAO,CAAe;QAL1C,UAAK,GAAG,2BAA2B,CAAC;QAC5B,WAAM,GAAW,EAAE,CAAC;QACpB,UAAK,GAAW,KAAK,CAAC;QACtB,aAAQ,GAAW,KAAK,CAAC;QAK7B,IAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,SAAS,CACtF,UAAA,KAAK;YACD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;YAC/B,EAAE,CAAA,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC;gBACvB,gBAAgB,CAAC,WAAW,EAAE,CAAC;YACnC,CAAC;QAEL,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,EAC1B,cAAM,OAAA,KAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB,CAC7B,CAAC;IAEN,CAAC;IA7BH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,wBAAwB;YAClC,WAAW,EAAE,mCAAmC;YAChD,SAAS,EAAE,CAAC,gCAAc,CAAC;YAC3B,SAAS,EAAE,CAAC,kCAAkC,CAAC;SAChD,CAAC;;qCAAA;IAwBF,oCAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,qCAA6B,gCAuBzC,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { IMDBAPIService } from './services/imdbapi.service';\nimport { Movie, MovieFields } from './models/movie';\n\n@Component({\n  moduleId: module.id,\n  selector: 'angular-observable-app',\n  templateUrl: 'angular-observable.component.html',\n  providers: [IMDBAPIService],\n  styleUrls: ['angular-observable.component.css']\n})\nexport class AngularObservableAppComponent {\n  title = 'angular-observable works!';\n  private movies:Movie[] = [];\n  private error:boolean = false;\n  private finished:boolean = false;\n\n  constructor(private IMDBAPI:IMDBAPIService){\n\n\n      let imdbSubscription = this.IMDBAPI.fetchByField(MovieFields.release_year, 2015).subscribe(\n          value => {\n              this.movies.push(value); \n              console.log(\"Component\", value)\n              if(this.movies.length > 2){\n                  imdbSubscription.unsubscribe();\n              }\n\n          },\n          error => this.error = true,\n          () => this.finished = true\n      );\n\n  }\n}\n"]}