{"version":3,"file":"angular-observable.component.js","sourceRoot":"","sources":["angular-observable.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAC1C,gCAA+B,4BAA4B,CAAC,CAAA;AAC5D,sBAAmC,gBAAgB,CAAC,CAAA;AASpD;IAME,uCAAoB,OAAsB;QAN5C,iBAyCC;QAnCqB,YAAO,GAAP,OAAO,CAAe;QAL1C,UAAK,GAAG,2BAA2B,CAAC;QAC5B,WAAM,GAAW,EAAE,CAAC;QACpB,UAAK,GAAW,KAAK,CAAC;QACtB,aAAQ,GAAW,KAAK,CAAC;QAK7B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAC7B,UAAA,KAAK;YACD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QACnC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAC7B,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,IAAI,CAC5D,UAAA,KAAK;YACC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QACnC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAC7B,CAAA;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,mBAAW,CAAC,YAAY,EAAE,IAAI,CAAC;aACvC,EAAE,CAAC,mBAAW,CAAC,YAAY,EAAE,IAAI,CAAC;aAClC,EAAE,CAAC,mBAAW,CAAC,KAAK,EAAE,WAAW,CAAC;aAClC,KAAK,EAAE;aACP,IAAI,CACH,UAAA,KAAK;YACD,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QACnC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAC3B,CAAC;IAKlB,CAAC;IA/CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,wBAAwB;YAClC,WAAW,EAAE,mCAAmC;YAChD,SAAS,EAAE,CAAC,gCAAc,CAAC;YAC3B,SAAS,EAAE,CAAC,kCAAkC,CAAC;SAChD,CAAC;;qCAAA;IA0CF,oCAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,qCAA6B,gCAyCzC,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { IMDBAPIService } from './services/imdbapi.service';\nimport { Movie, MovieFields } from './models/movie';\n\n@Component({\n  moduleId: module.id,\n  selector: 'angular-observable-app',\n  templateUrl: 'angular-observable.component.html',\n  providers: [IMDBAPIService],\n  styleUrls: ['angular-observable.component.css']\n})\nexport class AngularObservableAppComponent {\n  title = 'angular-observable works!';\n  private movies:Movie[] = [];\n  private error:boolean = false;\n  private finished:boolean = false;\n\n  constructor(private IMDBAPI:IMDBAPIService){\n\n\n      this.IMDBAPI.fecthOneById(1).then(\n          value => {\n              this.movies.push(value); \n              console.log(\"Component\", value)\n          },\n          error => this.error = true\n      );\n\n      this.IMDBAPI.fetchByField(MovieFields.release_year, 2015).then(\n        value => {\n              this.movies = value; \n              console.log(\"Component\", value)\n          },\n          error => this.error = true\n      )\n\n      this.IMDBAPI.byField(MovieFields.release_year, 2015)\n                  .or(MovieFields.release_year, 2014)\n                  .or(MovieFields.phase, \"Phase Two\")\n                  .fetch()\n                  .then(\n                    value => {\n                        this.movies = value; \n                        console.log(\"Component\", value)\n                    },\n                    error => this.error = true\n                  );\n\n\n\n\n  }\n}\n"]}